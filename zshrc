#####################################################################
#
#  initial setup file for only interactive zsh
#  This file is read after .zshenv file is read.
#
#####################################################################

###
# Set Shell variable

autoload colors
colors

# CTRL-w„Åß„Éë„Çπ„ÅÆÂâäÈô§„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´
export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>' 

# history
HISTSIZE=5000 HISTFILE=~/.zhistory SAVEHIST=5000
#PROMPT='%m{%n}%% '
#RPROMPT='[%~]'

# Ë£úÂÆåÂÆöÁæ©„ÅÆ„Éë„Çπ„ÇíËøΩÂä†
fpath=(~/.zsh/completion $fpath)

# binding keys
bindkey -e
bindkey '^p'	history-beginning-search-backward
bindkey '^n'	history-beginning-search-forward

# CTRL+z„Åßbg„ÅÆvim„Å´Âæ©Â∏∞„Åô„Çã
bindkey -s '^z' '^[q %vim^m'

# ESC+G„Åßtar xvzf „Å®ÂÖ•Âäõ
bindkey -s '^[G' 'tar xvzf '

# ESC+:„Åß"**/*(.)"„ÇíÂÖ•Âäõ
bindkey -s '^[:' '**/*(.)'


# LS_COLORS (from CentOS)
unset LS_COLORS
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.flac=01;35:*.mp3=01;35:*.mpc=01;35:*.ogg=01;35:*.wav=01;35:'

setopt prompt_subst
nprom () {
    local rbase=$'%{\e[33m%}[%~]%{\e[m%}' lf=$'\n'
    local pct=$'%0(?||%18(?||%{\e[31m%}))%#%{\e[m%}'
    local tm=$'[%T]'
    RPROMPT="%9(~||$rbase)"
    local pbase=$'%{\e[36m%}%U%B%n@%m%b%u'" $pct "
    PROMPT="%9(~|$rbase$lf|)$pbase"
    [[ "$TERM" = "screen" ]] && RPROMPT="[%U%~%u]"
}
nprom


# Set shell options
# Êó•Êú¨Ë™û„ÅÆÊñáÂ≠óÂåñ„Åë„ÇíÈò≤„Åê
setopt print_eight_bit

# ÊåáÂÆö„Åó„Åü„Ç≥„Éû„É≥„ÉâÂêç„Åå„Å™„Åè„ÄÅ„Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„Å®‰∏ÄËá¥„Åó„ÅüÂ†¥Âêà cd „Åô„Çã
setopt auto_cd

# „Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„ÅÆË£úÂÆå„ÅßÊú´Â∞æ„ÅÆ / „ÇíËá™ÂãïÁöÑ„Å´‰ªòÂä†„Åó„ÄÅÊ¨°„ÅÆË£úÂÆå„Å´ÂÇô„Åà„Çã
setopt auto_param_slash

# ÊúÄÂæå„Åå„Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„ÅßÁµÇ„Çè„Å£„Å¶„ÅÑ„ÇãÂ†¥ÂêàÊú´Â∞æ„ÅÆ / „ÇíËá™ÂãïÁöÑ„Å´Âèñ„ÇäÈô§„Åè
setopt auto_remove_slash

# „Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆÁµ∂ÂØæ„Éë„Çπ„Åå„Çª„ÉÉ„Éà„Åï„Çå„ÅüÂ§âÊï∞„ÅØ„ÄÅ„Åù„ÅÆ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆÂêçÂâç„Å®„Åó„Å¶Êâ±„ÅÜ„ÄÇ
setopt auto_name_dirs 

# history
setopt extended_history hist_ignore_dups hist_ignore_space share_history inc_append_history

# =command „Çí command „ÅÆ„Éë„ÇπÂêç„Å´Â±ïÈñã„Åô„Çã
setopt equals 

# „Éï„Ç°„Ç§„É´Âêç„Åß #, ~, ^ „ÅÆ 3 ÊñáÂ≠ó„ÇíÊ≠£Ë¶èË°®Áèæ„Å®„Åó„Å¶Êâ±„ÅÜ
setopt extended_glob

# ls -F„Å®ÂêåÊßò„Å´Ë£úÂÆåÂÄôË£ú„Å´„Çø„Ç§„ÉóË°®Á§∫
setopt list_types

# Ë£úÂÆåÂÄôË£ú„ÇíË©∞„ÇÅ„Çã
setopt list_packed

# beepÈü≥ÁÑ°Âäπ
setopt no_beep

# ÂÜÖÈÉ®„Ç≥„Éû„É≥„Éâ jobs „ÅÆÂá∫Âäõ„Çí„Éá„Éï„Ç©„É´„Éà„Åß jobs -l „Å´„Åô„Çã
setopt long_list_jobs 

# Ë£úÂÆåÂÄôË£úË°®Á§∫Âæå„ÄÅÂÖÉ„ÅÆ„Éó„É≠„É≥„Éó„Éà„Å´Êàª„Çã
setopt always_last_prompt

setopt cdable_vars sh_word_split auto_param_keys pushd_ignore_dups

# C-s, C-q„ÇíÁÑ°Âäπ„Å´„Åô„Çã
setopt no_flow_control

# cdÊôÇ„Å´Ëá™Âãï„Åßpushd
setopt auto_pushd

# TAB„ÅßË£úÂÆåÂÄôË£ú„ÇíÂàá„ÇäÊõø„Åà„Çã
setopt auto_menu

# Alias and functions
alias copy='cp -ip' del='rm -i' move='mv -i'
alias fullreset='echo "\ec\ec"'
h () 		{history $* | less}
alias ls='ls -F' la='ls -a' ll='ls -la'
mdcd ()		{mkdir -p "$@" && cd "$*[-1]"}
mdpu ()		{mkdir -p "$@" && pushd "$*[-1]"}
alias pu=pushd pd=popd dirs='dirs -v'
alias vi='vim'

# enable color support of ls and also add handy aliases
alias ls='ls -F --color=auto'
#alias dir='dir --color=auto'
#alias vdir='vdir --color=auto'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias r='rails'
alias s='screen -xR'

# Global aliases
alias -g L="| lv"
alias -g LE="| less"
alias -g G="| grep"


# Suffix aliases(Ëµ∑Âãï„Ç≥„Éû„É≥„Éâ„ÅØÁí∞Â¢É„Å´„Çà„Å£„Å¶Â§âÊõ¥„Åô„Çã)
#alias -s pdf=acroread dvi=xdvi 
#alias -s {odt,ods,odp,doc,xls,ppt}=soffice
#alias -s {tgz,lzh,zip,arc}=file-roller


# Ë£úÂÆå„Ç∑„Çπ„ÉÜ„É†„ÇíÂà©Áî®: Ë£úÂÆå„ÅÆÊåôÂãï„ÅåÂàÜ„Åã„Çä„ÇÑ„Åô„Åè„Å™„Çã2„Å§„ÅÆË®≠ÂÆö„ÅÆ„ÅøË®òËø∞
zstyle ':completion:*' format '%BCompleting %d%b'
zstyle ':completion:*' group-name ''
# „Éï„Ç°„Ç§„É´„É™„Çπ„ÉàË£úÂÆå„Åß„ÇÇls„Å®ÂêåÊßò„Å´Ëâ≤„Çí„Å§„Åë„ÇãÔΩ°
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# Ë£úÂÆåÊúâÂäπÂåñ
autoload -U compinit && compinit

# Ë£úÂÆå„Ç≠„É£„ÉÉ„Ç∑„É•
zstyle ':completion:*' use-cache true

# Ë£úÂÆå„É°„Éã„É•„Éº„Çí„Ç´„Éº„ÇΩ„É´Á≠â„ÅßÈÅ∏Êäû„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åô„Çã
zstyle ':completion:*' menu select=2

# Ë£úÂÆå„ÅÆÂ§ßÊñáÂ≠ó„ÉªÂ∞èÊñáÂ≠ó„ÇíÂå∫Âà•„Åó„Å™„ÅÑ„ÄÇ„Åå„ÄÅÂ§ßÊñáÂ≠ó„ÇíÂÖ•Âäõ„Åó„Åü„Å®„Åç„ÅØÂå∫Âà•„Åô„Çã„ÄÇ
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# sudoÊôÇ„ÇÇ$PATHÂÜÖ„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇíË£úÂÆå„Åô„Çã
zstyle ':completion:*:sudo:*' command-path ${(s.:.)PATH}

# processË£úÂÆå
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'

# % zmv '(*).jpeg' '$1.jpg'
# % zmv '(**/)foo(*).jpeg' '$1bar$2.jpg'
# % zmv -n '(**/)foo(*).jpeg' '$1bar$2.jpg' # ÂÆüË°å„Åõ„Åö„Éë„Çø„Éº„É≥Ë°®Á§∫„ÅÆ„Åø
# % zmv '(*)' '${(L)1}; # Â§ßÊñáÂ≠ó‚ÜíÂ∞èÊñáÂ≠ó
# % zmv -W '*.c.org' 'org/*.c' #„Äå(*)„Äç„Äå$1„Äç„Çí„Äå*„Äç„ÅßÊ∏à„Åæ„Åõ„Çâ„Çå„Çã
autoload zmv
autoload zargs

# „Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„Çí$EDITOR„ÅßÁ∑®ÈõÜ
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\ee' edit-command-line

# ÊúÄÂæå„Å´Êâì„Å£„Åü„Ç≥„Éû„É≥„Éâ„Çíscreen„ÅÆ„Ç¶„Ç£„É≥„Éâ„Ç¶„Çø„Ç§„Éà„É´„Å´
if [ "$TERM" = "xterm-256color" ]; then
    chpwd () { echo -n "_`dirs`\\" }
    preexec() {
        # see [zsh-workers:13180]
        # http://www.zsh.org/mla/workers/2000/msg03993.html
        emulate -L zsh
        local -a cmd; cmd=(${(z)2})
        case $cmd[1] in
            fg)
                if (( $#cmd == 1 )); then
                    cmd=(builtin jobs -l %+)
                else
                    cmd=(builtin jobs -l $cmd[2])
                fi
                ;;
            %*)
                cmd=(builtin jobs -l $cmd[1])
                ;;
            cd)
                if (( $#cmd == 2 )); then
                    cmd[1]=$cmd[2]
                fi
                ;&
            *)
                echo -n "k$cmd[1]:t\\"
                return
                ;;
        esac

        local -A jt; jt=(${(kv)jobtexts})

        $cmd >>(read num rest
            cmd=(${(z)${(e):-\$jt$num}})
            echo -n "k$cmd[1]:t\\") 2>/dev/null
    }
    chpwd
fi

# vcs_info„Å®rvm„ÅßÂà©Áî®„Åó„Å¶„ÅÑ„Çãruby„ÇíË°®Á§∫„Åô„Çã
autoload -Uz add-zsh-hook
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git svn hg bzr
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
zstyle ':vcs_info:(svn|bzr):*' branchformat '%b:r%r'

autoload -Uz is-at-least
if is-at-least 4.3.10; then
  zstyle ':vcs_info:git:*' check-for-changes true
  zstyle ':vcs_info:git:*' stagedstr "+"
  zstyle ':vcs_info:git:*' unstagedstr "-" 
  zstyle ':vcs_info:git:*' formats '(%s)-[%b]%c%u'
  zstyle ':vcs_info:git:*' actionformats '(%s)-[%b|%a]%c%u'
fi

function _update_vcs_info_msg() {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"


    # for rvm
    [[ -n "$rvm_ruby_string" ]] && psvar[2]="$rvm_ruby_string"

    # for gemset
    if [[ -n $GEM_HOME ]]; then
      ind=$(expr index $GEM_HOME @)
      if [ $ind -ne 0 ]; then
          length="$(expr length $GEM_HOME)"
          sub_length=`expr $length - $ind + 1`
          gem_spec=`expr substr $GEM_HOME $ind $sub_length`
          [[ -n "$psvar[2]" ]] && psvar[2]="$psvar[2]$gem_spec"
      fi
    fi
}
add-zsh-hook precmd _update_vcs_info_msg

VCS_PROMPT="%1(v|%F{green} %1v%f|)"
RUBY_PROMPT="%2(v| %U%B%F{magenta}(%2v)%f%b%u|)"

RPROMPT="$RUBY_PROMPT$VCS_PROMPT $RPROMPT"

# Putty„Çø„Ç§„Éà„É´„Éê„ÉºÁî®Ë®≠ÂÆö
case "${TERM}" in
  kterm*|xterm)
    precmd() {
      echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
    }
    ;;
  xterm-256color|screen)
    precmd() {
      echo -ne "\033P\033]0;${USER}@${HOST%%.*}:${PWD}\007\033\\"
    }
    ;;
esac


# rvm„ÅÆË™≠„ÅøËæº„Åø
[ -s $HOME/.rvm/scripts/rvm ] && source $HOME/.rvm/scripts/rvm

[ -s ~/.zshrc.local ] && source ~/.zshrc.local
