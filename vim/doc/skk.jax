*skk.jax* *skk* skk.vim 日本語ドキュメント

Author:
  Noriaki Yagi <no_yag@yahoo.co.jp>
  tyru <tyru.exe@gmail.com>
  thinca <thinca@gmail.com>
  Shougo Matsu <Shougo.Matsu@gmail.com>
  mattn <mattn.jp@gmail.com>
  krogue <krogue753@gmail.com>
  super blooper <anuenue.au@gmail.com>
License: パブリックドメイン

==============================================================================
目次						*skk-contents*

使い方						|skk-usage|
TIPS						|skk-tips|
インターフェース			|skk-interface|
  キーマッピング			|skk-keymappings|
グローバル変数				|skk-global-variables|
TODO						|skk-TODO|


==============================================================================
使い方						*skk-usage* {{{

skk_jisyo および skk_large_jisyo を適宜変更する。
:so skk.vim
Insert Mode で <C-j> (デフォルトでは) を押すと skk が起動する。

}}}
==============================================================================
TIPS						*skk-tips* {{{

初回起動時のもたつき {{{ ~
最初のもたつきは :call SkkAddRulesSection()
を実行するとコンパイル済のデータをこのファイルに書き込むのでだいぶストレスが減る。
ただしローマ字のルールを変更してもその変更は反映されないので、
一回 :call SkkDeleteRulesSection() を実行して次回起動時以降に
SkkAddRulesSection() を実行する必要がある。
}}}

statusline用の関数 {{{ ~
statuslineに含めるにはSkkGetModeStr()という関数が便利。
>
    let &statusline .= '%{SkkGetModeStr()}'
<
という風にして設定する。
また表示する文字列は|g:skk_abbrev_mode_string|、|g:skk_hira_mode_string|、
|g:skk_kata_mode_string|、|g:skk_zenei_mode_string|、|g:skk_ascii_mode_string|
によって変えられる。

この関数はskk.vim起動時に'rulerformat'に加えられるが、
現在では'rulerformat'や'ruler'自体があまり使われることがないため、
Vim7時代のskk.vimユーザにとってはこの表示は見たことがない人が多いかもしれない。
}}}

}}}
==============================================================================
インターフェース				*skk-interface* {{{

------------------------------------------------------------------------------
キーマッピング					*skk-keymappings* {{{

|skk-global-variables|を参照。

<Plug>(skk-toggle-im)				*<Plug>(skk-toggle-im)*
	これはデフォルトで|g:skk_control_j_key|に割り当てられています。
	割り当てたくない場合は|g:skk_control_j_key|を空文字にしてください。

<Plug>(skk-enable-im)				*<Plug>(skk-enable-im)*
<Plug>(skk-disable-im)				*<Plug>(skk-disable-im)*
<

}}}
}}}
==============================================================================
グローバル変数					*skk-global-variables* {{{


g:skk_jisyo								*g:skk_jisyo*
										(初期値: "~/.skk-jisyo")
		ユーザー辞書

g:skk_backup_jisyo						*g:skk_backup_jisyo*
										(初期値: g:skk_jisyo . ".BAK")
		ユーザー辞書のバックアップファイル

g:skk_auto_save_jisyo					*g:skk_auto_save_jisyo*
										(初期値: 0)
		終了時に辞書を保存するか？
		:so skk.vim した後は
		:call SkkSetAutoSaveJisyo(nr) で設定する。

		負: 保存しない。
		0: 聞いてから保存する。
		正: 聞かずに保存する。

g:skk_manual_save_jisyo_keys			*g:skk_manual_save_jisyo_keys*
										(初期値: "gS")
		ノーマルモードで辞書の手動セーブをするキー (空白なら mapping しない)

g:skk_large_jisyo						*g:skk_large_jisyo*
										(初期値: "/usr/local/share/skk/SKK-JISYO.L")
		ユーザー辞書の後に検索する辞書 (ソート済みの必要あり)

g:skk_external_prog						*g:skk_external_prog*
										(初期値: "")
		ユーザ辞書の後に検索する外部プログラム (空白でなければskk_large_jisyoは無視)

g:skk_control_j_key						*g:skk_control_j_key*
										(初期値: "<C-j>")
		<C-j> の働きをするキー。
		map に渡すので `\' はつけない。
		割り当てたくない場合は空文字にする。

g:skk_abbrev_to_zenei_key				*g:skk_abbrev_to_zenei_key*
										(初期値: "<C-q>")
		abbrevモードで全角英数に変換するキー。`\' はつけない。
		コンソールで <C-q> がこない場合は vim 起動前に stty -ixon するか
		他のキーにする。

g:skk_keep_state						*g:skk_keep_state*
										(初期値: 0)
		Insert モードを抜けて再び
		Insert モードにしたときに前の状態を維持しておくか？

g:skk_initial_mode						*g:skk_initial_mode*
										(初期値: "hira")
		skk をオンにしたときの初期モード

g:skk_marker_white						*g:skk_marker_white*
										(初期値: "▽")
		▽モードのマーク

g:skk_marker_black						*g:skk_marker_black*
										(初期値: "▼")
		▼モードのマーク

g:skk_marker_okuri						*g:skk_marker_okuri*
										(初期値: "*")
		送りがな開始位置のマーク

g:skk_start_henkan_key					*g:skk_start_henkan_key*
										(初期値: " ")
		変換/次候補キー

g:skk_prev_cand_key						*g:skk_prev_cand_key*
										(初期値: "x")
		前候補キー

g:skk_purge_cand_key					*g:skk_purge_cand_key*
										(初期値: "X")
		現在の候補を辞書から削除するキー

g:skk_henkan_point_keys					*g:skk_henkan_point_keys*
										(初期値: "ABCDEFGHIJKMNOPRSTUVWYZ")
		入力されたら▽モードにするキー

g:skk_select_cand_keys					*g:skk_select_cand_keys*
										(初期値: "ASDFJKL")
		選択方式のときに選択に利用するキー

g:skk_show_candidates_count				*g:skk_show_candidates_count*
										(初期値: 4)
		何回目の変換で選択方式にするか?

g:skk_completion_key					*g:skk_completion_key*
										(初期値: "\<Tab>")
		見出し語の補完動作を行うキー

g:skk_next_comp_key						*g:skk_next_comp_key*
										(初期値: ".")
		見出し語の補完で次の候補を出力するキー

g:skk_prev_comp_key						*g:skk_prev_comp_key*
										(初期値: ",")
		見出し語の補完で前の候補を出力するキー

g:skk_special_midasi_keys				*g:skk_special_midasi_keys*
										(初期値: "<>?")
		接頭辞・接尾辞の入力をするキー

g:skk_kutouten_type						*g:skk_kutouten_type*
										(初期値: "jp")
		句読点のタイプ
		"jp" なら skk_kutouten_jp を見る。
		"en" なら skk_kutouten_en を見る。


g:skk_kutouten_jp						*g:skk_kutouten_jp*
										(初期値: "。、")
		句読点のタイプ "jp" の場合 (最初の一文字が句点、最後の一文字が読点)

g:skk_kutouten_en						*g:skk_kutouten_en*
										(初期値: "．，")
		句読点のタイプ "en" の場合 (最初の一文字が句点、最後の一文字が読点)

g:skk_use_numeric_conversion			*g:skk_use_numeric_conversion*
										(初期値: 1)
		数値変換を行うか？

g:skk_egg_like_newline					*g:skk_egg_like_newline*
										(初期値: 0)
		non-zeroなら<CR>で確定した時に改行文字を出力しない

g:skk_show_annotation					*g:skk_show_annotation*
										(初期値: 0)
		non-zeroなら候補選択時に註釈を表示する (インラインでは未対応)

g:skk_use_face							*g:skk_use_face*
										(初期値: 0)
		non-zeroなら変換時に色を付ける。
		ただし変換時に skk_henkan というハイライトグループがないと 0 にされる。

g:skk_autofill_toggle_key				*g:skk_autofill_toggle_key*
										(初期値: "<C-k>")
		Auto Fillのトグルをするキー (空白なら mapping しない) `\' はつけない。
		format.vim が読み込まれていないと mapping しない。

g:skk_user_rom_kana_rules				*g:skk_user_rom_kana_rules*
										(初期値はとても長い)
		ローマ字の変換ルール
		行頭からタブ文字までがローマ字、次のタブまでがひらがな、
		その次のタブまでがカタカナ、その次が残す文字、最後は \<NL>。
		もしあれば skk_user_rom_kana_rules が追加されるので、
		ちょっとした追加や変更なら skk_user_rom_kana_rules に記述したほうがいい。

g:skk_user_rom_func_rules				*g:skk_user_rom_func_rules*
										(初期値はとても長い)
		ひらがな・カタカナモードのとき関数を呼び出すタイプのルール
		行頭からタブ文字までがローマ字、次から \<NL> までが関数呼出し。
		このローマ字が入力されたときはこの関数の戻り値が返る。
		かなでも関数でも子がある場合はこの関数は実行されない。
		もしあれば skk_user_rom_func_rules が追加される。

g:skk_user_zenei_rules					*g:skk_user_zenei_rules*
										(初期値はとても長い)
		全角英数変換ルール
		各行の1バイト目の入力を2バイト以降 <NL> の前までに変換する
		もしあれば skk_user_zenei_rules が追加される。
		SkkAscii2Zenei でも使う。

g:skk_imdisable_state					*g:skk_imdisable_state*
										(初期値: 1)
		0: IMをオンにする (set noimdisable)
		1: IMをオフにする (set imdisable)
		それ以外: &imdisableを弄らない

g:skk_ascii_mode_string					*g:skk_ascii_mode_string*
										(初期値: 'SKK:aA')
		アスキーモードを示す文字列。

g:skk_hira_mode_string					*g:skk_hira_mode_string*
										(初期値: 'SKK:あ')
		かなモードを示す文字列。

g:skk_kata_mode_string					*g:skk_kata_mode_string*
										(初期値: 'SKK:ア')
		カナモードを示す文字列。

g:skk_zenei_mode_string					*g:skk_zenei_mode_string*
										(初期値: 'SKK:Ａ')
		全英モードを示す文字列。

g:skk_abbrev_mode_string				*g:skk_abbrev_mode_string*
										(初期値: 'SKK:aあ')
		abbrevモードを示す文字列。

g:skk_use_color_cursor					*g:skk_use_color_cursor*
										(初期値: 0)
		カーソルに色付けする。

g:skk_cursor_hira_color					*g:skk_cursor_hira_color*
										(初期値: '')
		かなモードを示すカーソル色。

g:skk_cursor_kata_color					*g:skk_cursor_kata_color*
										(初期値: '')
		カナモードを示すカーソル色。

g:skk_cursor_zenei_color					*g:skk_cursor_zenei_color*
										(初期値: '')
		全英モードを示すカーソル色。

g:skk_cursor_ascii_color					*g:skk_cursor_ascii_color*
										(初期値: '')
		asciiモードを示すカーソル色。

g:skk_cursor_abbrev_color					*g:skk_cursor_abbrev_color*
										(初期値: '')
		abbrevモードを示すカーソル色。

g:skk_sticky_key							*g:skk_sticky_key*
										(初期値: '')
		入力されたら▽モードにするキー(Stickyキー)。
		初期値はどのキーもStickyキーにマッピングしない。

g:skk_kakutei_key							*g:skk_kakutei_key*
										(初期値: "\<C-j>")
		明示的な確定動作を行うキー。
		入力された文字列と直接比較されるので「\」が必要。

g:skk_remap_lang_mode						*g:skk_remap_lang_mode*
										(初期値: 0)
		もし真なら`lmap`で、もし偽なら`lnoremap`で
		キーをマッピングする。
		これはimapやcmapのマッピングを生かしたい場合に便利。


g:skk_enable_hook							*g:skk_enable_hook*
										(初期値: "")
		次のようにしてマッピングが行われる直後に呼ばれるフック関数を登録する。
>
		" Do not map `<Plug>(skk-toggle-im)`.
		let skk_control_j_key = ''

		" `<C-j><C-e>` to enable, `<C-j><C-d>` to disable.
		map! <C-j><C-e> <Plug>(skk-enable-im)
		map! <C-j><C-d> <Nop>
		function! MySkkMap()
			lunmap <buffer> <C-j>
			lmap <buffer> <C-j><C-d> <Plug>(skk-disable-im)
		endfunction
		let skk_enable_hook = 'MySkkMap'
<
		この例では<C-j><C-e>でskk.vimを有効に、
		<C-j><C-d>でskk.vimを無効にしている。
		このようにデフォルトマッピングを上書きしたい時に便利。


g:skk_jisyo_encoding						*g:skk_jisyo_encoding*
										(初期値: "guess")
		辞書の文字コードを指定する。
		ユーザ辞書用。

		指定できる値としては
		1. "guess"
		2. |iconv()|や|'encoding'|オプションに指定できる形の
		文字コードを表す文字列
		3. 2の文字列を各要素に含んだ|List|
		がある。
		それ以外の不正な値だと警告を表示し
		初期値として再判定を行う。

		初期値だと
		1. euc-jp
		2. cp932
		3. iso-2022-jp
		4. utf-8
		5. 現在の'encoding'の値
		の順に文字コードの判定を行う。
		いわば >
		["euc-jp", "cp932", "iso-2022-jp", "utf-8", &enc]
<		と同じような意味だが、
		vim6との互換性のために文字列の初期値が使われている。

g:skk_large_jisyo_encoding						*g:skk_large_jisyo_encoding*
										(初期値: "guess")
		|g:skk_jisyo_encoding|のシステム辞書版。
		詳しくは|g:skk_jisyo_encoding|を参照。

g:skk_enable_jlod_layout						*g:skk_enable_jlod_layout*
										(初期値: 0)
	この値を真にするといくつかの変数のデフォルト値が変わる。
	変わる変数とその値は以下の通り。

	変数							値 ~
	g:skk_henkan_point_keys			"ABCDEFGHIJKMNOPQRSTUVWXZ":<>"
	g:skk_select_cand_keys			"AOEUHTNS"
	g:skk_rom_kana_rules			(とても長いのでplugin/skk.vimを参照)
	g:skk_rom_func_rules			(とても長いのでplugin/skk.vimを参照)

}}}
==============================================================================
TODO						*skk-TODO* {{{

- Insertモードで <Esc> をマップするとコンソールで矢印キーが使えない。
- 辞書の候補に Lisp の式が書かれている場合の処理
- undo がぐちゃぐちゃになる。
- vim7 で ff=mac の辞書は読み込み・書き込みが遅い。

}}}
==============================================================================
vim:tw=78:fo=tcq2mM:ts=4:ft=help:noet:norl:fen:fdm=marker:fmr={{{,}}}
